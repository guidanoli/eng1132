Undergraduate thesis topics
---------------------------

- Introduction
	- Programming languages
	- Scripting languages
		- C APIs
	- What are Lua and Python?
		- How are they similar?
		- How are they different?
	- Bridging Lua and Python through C

- Motivation
	- Why would Python and Lua need to communicate?
	- How would the communication between Python and Lua take shape?
	- The Lupa project: its strengths and its weaknesses

- Methodology
	- Code inspection and refactoring

- Using Python in Lua
	- Introduction
	- Basic object types
		- None
		- Booleans
		- Integers
			- Overflow handling
		- Floats
		- Strings
	- Complex object types
		- The Python object userdata
		- Initializing Python objects
		- Finalizing Python objects (__gc)
		- Python objects attributes and items (__index, __newindex)
			- Access protocols
			- Wrapping Python None
		- Calling Python objects (__call)
			- Bound methods
			- Keyword arguments
		- Iterating through Python objects (iter, iterex, enumerate)
			- Wrapping Python None
		- Optimizations
			- Object caching
			- Argument pre-processing
		- Additional functionalities
			- Printing Python objects (__tostring)
	- Error handling
	- Compiling Python code

- Using Lua in Python
	- Introduction
	- Basic object types
		- Nil
		- Booleans
		- Numbers
		- Strings
	- Complex object types
		- The Lua object class
		- Initializing Lua objects
		- Finalizing Lua objects (__dealloc__)
		- Lua objects fields (__getattr__, __setattr__, __getitem__, __setitem__)
		- Calling Lua objects (__call__)
		- Iterating through Lua tables (__iter__)
			- keys, values, items
		- Table entry deletion (__delattr__, __delitem__)
		- Additional functionalities
			- Printing Lua objects (__str__)
		- Coroutine orchestration
	- Error handling
	- Compiling Lua code

- Porting Lupa to Lua
	- Introduction
	- The current usage of Lupa
	- The new intended usage of Lupa
		- Pre-existing Lua state
		- Necessary changes
	- Embedding Lua versus embedding Python
	- Initializing and finalizing Python
	- Importing Lupa in embedded Python
	- Initializing the Lua runtime in Python

- Conclusion
	- Did we achieve the goals set by our motivation?
	- Future improvements
